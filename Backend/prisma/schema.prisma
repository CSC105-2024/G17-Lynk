// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id       Int     @id @default(autoincrement())
  email    String  @unique
  username String  @unique
  password String  
  links     Link[]
  playlists Playlist[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Link {
  id          Int       @id @default(autoincrement())
  url         String
  title       String
  description String?
  iconLink    String?   
  tags        Tag[]     @relation("LinkTags")  
  playlist    Playlist? @relation(fields: [playlistId], references: [id])
  playlistId  Int?
  user        User      @relation(fields: [userId], references: [id])
  userId      Int
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  isPinned Boolean?
  clickCount Int      @default(0)
  @@index([userId]) 
}

model Playlist {
  id          Int      @id @default(autoincrement())
  name        String
  description String?
  iconLink    String?  
  linkCount   Int      @default(0) 
  links       Link[]
  user        User     @relation(fields: [userId], references: [id])
  userId      Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([userId])
  @@unique([userId, name]) 
}

model Tag {
  id        Int     @id @default(autoincrement())
  name      String  @unique
  links     Link[]  @relation("LinkTags")  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}